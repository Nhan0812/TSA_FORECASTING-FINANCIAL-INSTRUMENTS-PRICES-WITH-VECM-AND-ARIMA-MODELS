lwd = 5, col = "dark green",
na.action = na.pass)
par(mfrow = c(1, 1)) # restore the original single panel
arima510 <- Arima(Data$x1,
order = c(5, 1, 0)
)
arima511 <- Arima(Data$x1,
order = c(5, 1, 1)
)
arima410 <- Arima(Data$x1,
order = c(4, 1, 0)
)
arima310 <- Arima(Data$x1,
order = c(3, 1, 0)
)
arima313 <- Arima(Data$x1,
order = c(3, 1, 3)
)
arima710 <- Arima(Data$x1,
order = c(7, 1, 0),
)
arima510_2 <- Arima(Data$x1,
order = c(5, 1, 0),
include.constant = TRUE)  # including a constant
coeftest(arima510_2)
coeftest(arima510)
coeftest(arima511)
coeftest(arima410)
coeftest(arima310)
coeftest(arima313)
coeftest(arima710)
plot(resid(arima510),col = "royalblue")
plot(resid(arima511),col = "royalblue")
plot(resid(arima410),col = "royalblue")
plot(resid(arima310),col = "royalblue")
plot(resid(arima313), col = "royalblue3")
plot(resid(arima710),col = "royalblue")
plot_ACF_PACF_resids(arima510)
plot_ACF_PACF_resids(arima511)
plot_ACF_PACF_resids(arima410)
plot_ACF_PACF_resids(arima310)
plot_ACF_PACF_resids(arima313)
plot_ACF_PACF_resids(arima710)
Box.test(resid(arima510), type = "Ljung-Box", lag = 10)
Box.test(resid(arima510), type = "Ljung-Box", lag = 15)
Box.test(resid(arima510), type = "Ljung-Box", lag = 20)
Box.test(resid(arima510), type = "Ljung-Box", lag = 25)
Box.test(resid(arima511), type = "Ljung-Box", lag = 10)
Box.test(resid(arima511), type = "Ljung-Box", lag = 15)
Box.test(resid(arima511), type = "Ljung-Box", lag = 20)
Box.test(resid(arima511), type = "Ljung-Box", lag = 25)
Box.test(resid(arima410), type = "Ljung-Box", lag = 10)
Box.test(resid(arima410), type = "Ljung-Box", lag = 15)
Box.test(resid(arima410), type = "Ljung-Box", lag = 20)
Box.test(resid(arima410), type = "Ljung-Box", lag = 25)
Box.test(resid(arima310), type = "Ljung-Box", lag = 10)
Box.test(resid(arima310), type = "Ljung-Box", lag = 15)
Box.test(resid(arima310), type = "Ljung-Box", lag = 20)
Box.test(resid(arima310), type = "Ljung-Box", lag = 25)
Box.test(resid(arima313), type = "Ljung-Box", lag = 10)
Box.test(resid(arima313), type = "Ljung-Box", lag = 15)
Box.test(resid(arima313), type = "Ljung-Box", lag = 20)
Box.test(resid(arima313), type = "Ljung-Box", lag = 25)
Box.test(resid(arima710), type = "Ljung-Box", lag = 10)
Box.test(resid(arima710), type = "Ljung-Box", lag = 15)
Box.test(resid(arima710), type = "Ljung-Box", lag = 20)
Box.test(resid(arima710), type = "Ljung-Box", lag = 25)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima510), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h = 0.05, col='red')
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima313), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h = 0.05, col='red')
AIC(arima510, arima511,
arima410,
arima310, arima313,
arima710)
BIC(arima510, arima511,
arima410,
arima310, arima313,
arima710)
par(mfrow = c(2, 1))
acf(Data$dx2,
lag.max = 36, # max lag for ACF
ylim = c(-0.1, 0.1),   # limits for the y axis - we give c(min, max)
lwd = 5,
col = "dark green",
na.action = na.pass)   # do not stop if there are missing values in the data
pacf(Data$dx2,
lag.max = 36,
lwd = 5, col = "dark green",
na.action = na.pass)
par(mfrow = c(1, 1)) # restore the original single panel
arima510_x2 <- Arima(Data$x2,
order = c(5, 1, 0)
)
arima511_x2 <- Arima(Data$x2,
order = c(5, 1, 1)
)
arima410_x2 <- Arima(Data$x2,
order = c(4, 1, 0)
)
arima310_x2 <- Arima(Data$x2,
order = c(3, 1, 0)
)
arima313_x2 <- Arima(Data$x2,
order = c(3, 1, 3)
)
arima510_2_x2 <- Arima(Data$x2,
order = c(5, 1, 0),
include.constant = TRUE)
coeftest(arima510_x2)
coeftest(arima511_x2)
coeftest(arima410_x2)
coeftest(arima310_x2)
coeftest(arima313_x2)
plot(resid(arima510_x2))
plot(resid(arima511_x2))
plot(resid(arima410_x2))
plot(resid(arima310_x2))
plot(resid(arima313_x2))
Box.test(resid(arima510_x2), type = "Ljung-Box", lag = 10)
Box.test(resid(arima510_x2), type = "Ljung-Box", lag = 15)
Box.test(resid(arima510_x2), type = "Ljung-Box", lag = 20)
Box.test(resid(arima510_x2), type = "Ljung-Box", lag = 25)
Box.test(resid(arima511_x2), type = "Ljung-Box", lag = 10)
Box.test(resid(arima511_x2), type = "Ljung-Box", lag = 15)
Box.test(resid(arima511_x2), type = "Ljung-Box", lag = 20)
Box.test(resid(arima511_x2), type = "Ljung-Box", lag = 25)
Box.test(resid(arima410_x2), type = "Ljung-Box", lag = 10)
Box.test(resid(arima410_x2), type = "Ljung-Box", lag = 15)
Box.test(resid(arima410_x2), type = "Ljung-Box", lag = 20)
Box.test(resid(arima410_x2), type = "Ljung-Box", lag = 25)
Box.test(resid(arima310_x2), type = "Ljung-Box", lag = 10)
Box.test(resid(arima310_x2), type = "Ljung-Box", lag = 15)
Box.test(resid(arima310_x2), type = "Ljung-Box", lag = 20)
Box.test(resid(arima310_x2), type = "Ljung-Box", lag = 25)
Box.test(resid(arima313_x2), type = "Ljung-Box", lag = 10)
Box.test(resid(arima313_x2), type = "Ljung-Box", lag = 15)
Box.test(resid(arima313_x2), type = "Ljung-Box", lag = 20)
Box.test(resid(arima313_x2), type = "Ljung-Box", lag = 25)
bj_pvalues = c()
for(i in c(1:100)){
bj = Box.test(resid(arima510_x2), type = "Ljung-Box", lag = i)
bj_pvalues = append(bj_pvalues,bj$p.value)
}
plot(bj_pvalues, type='l')
abline(h=0.05, col='red')
AIC(arima510_x2,arima511_x2,
arima410_x2,
arima310_x2, arima313_x2)
BIC(arima510_x2,arima511_x2,
arima410_x2,
arima310_x2, arima313_x2)
out_of_sample <-read.csv("Out_of_sample.csv",header = TRUE, dec = ".")
class(out_of_sample)
out_of_sample$X <- as.Date(out_of_sample$X,
format = "%d-%m-%y")
out_of_sample <- xts(out_of_sample[,-1], out_of_sample$X)
oos_x1 <- out_of_sample$x1
oos_x1
tail(Data, 12)
forecasts_x1 <- forecast(arima313, # model for prediction
h = 30) # how many periods outside the sample
forecasts_x1
forecasts_x1$mean
class(forecasts_x1$mean)
forecasts_x1$lower
forecasts_x1$upper
forecasts_x1_data <- data.frame(f_mean = as.numeric(forecasts_x1$mean),
f_lower = as.numeric(forecasts_x1$lower[, 2]),
f_upper = as.numeric(forecasts_x1$upper[, 2]))
head(forecasts_x1_data,30)
Data_x1 <- rbind(Data[, "x1"], oos_x1)
tail(Data_x1, n = 40)
forecasts_x1_xts <- xts(forecasts_x1_data,
order.by = index(oos_x1))
forecasts_x1_xts
Data_x1_combined <- merge(Data_x1, forecasts_x1_xts)
head(Data_x1_combined)
tail(Data_x1_combined,40)
plot(Data_x1_combined [, c("x1", "f_mean", "f_lower", "f_upper")],
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "30 day forecast of x1",
col = c("black", "blue", "red", "red"))
plot(Data_x1_combined ["2020-11/", c("x1", "f_mean", "f_lower", "f_upper")],
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "30 day forecast of x1",
col = c("black", "blue", "red", "red"))
Data_x1_Eva <- tail(Data_x1_combined, 30)
Data_x1_Eva
Data_x1_Eva$mae   <-  abs(Data_x1_Eva$x1 - Data_x1_Eva$f_mean)
Data_x1_Eva$mse   <-  (Data_x1_Eva$x1 - Data_x1_Eva$f_mean) ^ 2
Data_x1_Eva$mape  <-  abs((Data_x1_Eva$x1 - Data_x1_Eva$f_mean)/Data_x1_Eva$x1)
Data_x1_Eva$amape <-  abs((Data_x1_Eva$x1 - Data_x1_Eva$f_mean)/(Data_x1_Eva$x1 + Data_x1_Eva$f_mean))
Data_x1_Eva
ARIMA_x1 <- colMeans(Data_x1_Eva[, c("mae", "mse", "mape", "amape")])
apply(Data_x1_Eva[, c("mae", "mse", "mape", "amape")], 2, FUN = median)
oos_x2 <- out_of_sample$x2
oos_x2
tail(Data, 12)
forecasts_x2 <- forecast(arima510_x2, # model for prediction
h = 30) # how many periods outside the sample
forecasts_x2
forecasts_x2$mean
class(forecasts_x2$mean)
forecasts_x2$lower
forecasts_x2$upper
forecasts_x2_data <- data.frame(f_mean = as.numeric(forecasts_x2$mean),
f_lower = as.numeric(forecasts_x2$lower[, 2]),
f_upper = as.numeric(forecasts_x2$upper[, 2]))
head(forecasts_x2_data,30)
Data_x2 <- rbind(Data[, "x2"], oos_x2)
tail(Data_x2, n = 40)
forecasts_x2_xts <- xts(forecasts_x2_data,
order.by = index(oos_x2))
forecasts_x2_xts
Data_x2_combined <- merge(Data_x2, forecasts_x2_xts)
head(Data_x2_combined)
tail(Data_x2_combined,40)
plot(Data_x2_combined ["2020-11/", c("x2", "f_mean", "f_lower", "f_upper")],
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "30 day forecast of x2",
col = c("black", "blue", "red", "red"))
Data_x2_Eva <- tail(Data_x2_combined, 30)
Data_x2_Eva
Data_x2_Eva$mae   <-  abs(Data_x2_Eva$x2 - Data_x2_Eva$f_mean)
Data_x2_Eva$mse   <-  (Data_x2_Eva$x2 - Data_x2_Eva$f_mean) ^ 2
Data_x2_Eva$mape  <-  abs((Data_x2_Eva$x2 - Data_x2_Eva$f_mean)/Data_x2_Eva$x2)
Data_x2_Eva$amape <-  abs((Data_x2_Eva$x2 - Data_x2_Eva$f_mean)/(Data_x2_Eva$x2 + Data_x2_Eva$f_mean))
Data_x2_Eva
ARIMA_x2 <- colMeans(Data_x2_Eva[, c("mae", "mse", "mape", "amape")])
apply(Data_x2_Eva[, c("mae", "mse", "mape", "amape")], 2, FUN = median)
VARselect(Data[,1:2],
lag.max = 7)
johan.test.trace <-
ca.jo(Data[,1:2], # data
ecdet = "const", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "trace",  # type of the test: trace or eigen
K = 6           # lag order of the series (levels) in the VAR
)
summary(johan.test.trace)
cbind(summary(johan.test.trace)@teststat,
summary(johan.test.trace)@cval)
summary(johan.test.trace)@V
summary(johan.test.trace)@W
johan.test.eigen <-
ca.jo(Data[,1:2], # data
ecdet = "const", # "none" for no intercept in cointegrating equation,
# "const" for constant term in cointegrating equation and
# "trend" for trend variable in cointegrating equation
type = "eigen",  # type of the test: trace or eigen
K = 6           # lag order of the series (levels) in the VAR
)
summary(johan.test.eigen)
Data.vec6 <- cajorls(johan.test.eigen, # defined specification
r = 1) # number of cointegrating vectors
summary(Data.vec6)
summary(Data.vec6$rlm)
Data.vec6$beta
johan.test.eigen@W
Data.vec6.asVAR <- vec2var(johan.test.eigen, r = 1)
Data.vec6.asVAR
plot(irf(Data.vec6.asVAR, n.ahead = 36), ask = FALSE)
plot(fevd(Data.vec6.asVAR, n.ahead = 36), ask = FALSE)
head(residuals(Data.vec6.asVAR))
serial.test(Data.vec6.asVAR)
plot(serial.test(Data.vec6.asVAR))
Data.vec6.asVAR %>%
residuals() %>%
as_tibble() %>%
ggplot(aes(`resids of x1`)) +
geom_histogram(aes(y =..density..),
colour = "black",
fill = "pink") +
stat_function(fun = dnorm,
args = list(mean = mean(residuals(Data.vec6.asVAR)[, 1]),
sd = sd(residuals(Data.vec6.asVAR)[, 1]))) +
theme_bw() +
labs(
title = "Density of x1 residuals",
y = "", x = "",
caption = "source: own calculations"
)
Data.vec6.asVAR %>%
residuals() %>%
as_tibble() %>%
ggplot(aes(`resids of x2`)) +
geom_histogram(aes(y =..density..),
colour = "black",
fill = "pink") +
stat_function(fun = dnorm,
args = list(mean = mean(residuals(Data.vec6.asVAR)[, 2]),
sd = sd(residuals(Data.vec6.asVAR)[, 2]))) +
theme_bw() +
labs(
title = "Density of x2 residuals",
y = "", x = "",
caption = "source: own calculations"
)
normality.test(Data.vec6.asVAR)
Data.vec6.fore <-
predict(
vec2var(
johan.test.eigen,
r = 1),     # no of cointegrating vectors
n.ahead = 30, # forecast horizon
ci = 0.95)    # confidence level for intervals
summary(Data.vec6.fore)
Data.vec6.fore$fcst$x1
Data.vec6.fore$fcst$x2
tail(index(out_of_sample), 30)
x1_forecast <- xts(Data.vec6.fore$fcst$x1[,-4],
# we exclude the last column with CI
tail(index(out_of_sample), 30))
names(x1_forecast) <- c("x1_fore", "x1_lower", "x1_upper")
x2_forecast <- xts(Data.vec6.fore$fcst$x2[, -4],
# we exclude the last column with CI
tail(index(out_of_sample), 30))
names(x2_forecast) <- c("x2_fore", "x2_lower", "x2_upper")
Data.fore <- merge(out_of_sample[,1:2],
x1_forecast,
x2_forecast)
tail(Data.fore,40)
plot(Data.fore ["2020-11/", c("x1", "x1_fore", "x1_lower", "x1_upper")],
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "30 day forecast of x1",
col = c("black", "blue", "red", "red"))
plot(Data.fore ["2020-11/", c("x2", "x2_fore", "x2_lower", "x2_upper")],
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "30 day forecast of x2",
col = c("black", "blue", "red", "red"))
Data.fore2 <- Data.fore[,-30]
Data.fore2$mae.x1   <-  abs(Data.fore2$x1 - Data.fore2$x1_fore)
Data.fore2$mse.x1   <-  (Data.fore2$x1 - Data.fore2$x1_fore)^2
Data.fore2$mape.x1  <-  abs(Data.fore2$x1 - Data.fore2$x1_fore)/Data.fore2$x1
Data.fore2$amape.x1 <-  abs(Data.fore2$x1 - Data.fore2$x1_fore)/(Data.fore2$x1 + Data.fore2$x1_fore)
Data.fore2$mae.x2   <-  abs(Data.fore2$x2 - Data.fore2$x2_fore)
Data.fore2$mse.x2   <-  (Data.fore2$x2 - Data.fore2$x2_fore)^2
Data.fore2$mape.x2  <-  abs(Data.fore2$x2 - Data.fore2$x2_fore)/Data.fore2$x2
Data.fore2$amape.x2 <-  abs(Data.fore2$x2 - Data.fore2$x2_fore)/(Data.fore2$x2 + Data.fore2$x2_fore)
VECM_x1 <- colMeans(Data.fore2[, c("mae.x1",
"mse.x1",
"mape.x1",
"amape.x1")], na.rm = TRUE)
VECM_x2 <- colMeans(Data.fore2[, c("mae.x2",
"mse.x2",
"mape.x2",
"amape.x2")], na.rm = TRUE)
result <- rbind(ARIMA_x1,VECM_x1, ARIMA_x2,VECM_x2)
result %>%
knitr::kable(digits = 4) %>%
kableExtra::kable_styling(full_width = F,
bootstrap_options = c("striped",
"hover",
"condensed"))
#| echo: false
getwd()
#| echo: false
setwd("D://UW//2. Summer 22-23//1. Time Series Analysis//Project//TSA")
#| echo: false
library(xts)
library(tidyverse)
library(quantmod)
library(lmtest)
library(forecast)
library(dygraphs)
library(vars)
library(knitr)
library(kableExtra)
source("testdf.R")
source("function_plot_ACF_PACF_resids.R")
Data <- read.csv("TSA_2023_project_data_1.csv",header = TRUE, dec = ".")
str(Data)
Data$X <- as.Date(Data$X,
format = "%d-%m-%y")
class(Data)
Data <- xts(Data[,-1], Data$X)
class(Data)
str(Data)
summary(Data)
head(Data,6)
plot(Data,
main = "Graph for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
legend.loc = "bottomleft",
type="l")
plot(Data,
main = "Graph for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
legend.loc = "bottomleft",
multi.panel = TRUE,
yaxis.same = FALSE,
type="l")
Data$dx1 <- diff.xts(Data$x1)
Data$dx2 <- diff.xts(Data$x2)
plot(Data[, 1:2],
col = c("black", "blue"),
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 2,
main = "Time Series X1 & X2",
legend.loc = "topright")
testdf(variable = Data$x1,
max.augmentations = 3)
testdf(variable = Data$dx1,
max.augmentations = 3)
testdf(variable = Data$x2,
max.augmentations = 3)
testdf(variable = Data$dx2,
max.augmentations = 3)
model.coint <- lm(x1 ~ x2, data = Data)
summary(model.coint)
testdf(variable = residuals(model.coint), max.augmentations = 3)
par(mfrow = c(2, 1))
acf(Data$dx1,
lag.max = 36, # max lag for ACF
ylim = c(-0.1, 0.1),   # limits for the y axis - we give c(min, max)
lwd = 5,
col = "dark green",
na.action = na.pass)   # do not stop if there are missing values in the data
#| echo: false
getwd()
#| echo: false
setwd("D://UW//2. Summer 22-23//1. Time Series Analysis//Project//TSA")
#| echo: false
library(xts)
library(tidyverse)
library(quantmod)
library(lmtest)
library(forecast)
library(dygraphs)
library(vars)
library(knitr)
library(kableExtra)
source("testdf.R")
source("function_plot_ACF_PACF_resids.R")
Data <- read.csv("TSA_2023_project_data_1.csv",header = TRUE, dec = ".")
str(Data)
Data$X <- as.Date(Data$X,
format = "%d-%m-%y")
class(Data)
Data <- xts(Data[,-1], Data$X)
class(Data)
str(Data)
summary(Data)
head(Data,6)
plot(Data,
main = "Graph for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
legend.loc = "bottomleft",
type="l")
plot(Data,
main = "Graph for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
legend.loc = "bottomleft",
multi.panel = TRUE,
yaxis.same = FALSE,
type="l")
Data$dx1 <- diff.xts(Data$x1)
Data$dx2 <- diff.xts(Data$x2)
plot(Data[, 1:2],
col = c("black", "blue"),
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 2,
main = "Time Series X1 & X2",
legend.loc = "topright")
testdf(variable = Data$x1,
max.augmentations = 3)
testdf(variable = Data$dx1,
max.augmentations = 3)
testdf(variable = Data$x2,
max.augmentations = 3)
testdf(variable = Data$dx2,
max.augmentations = 3)
model.coint <- lm(x1 ~ x2, data = Data)
summary(model.coint)
testdf(variable = residuals(model.coint), max.augmentations = 3)
par(mfrow = c(2, 1))
acf(Data$dx1,
lag.max = 36, # max lag for ACF
ylim = c(-0.1, 0.1),   # limits for the y axis - we give c(min, max)
lwd = 5,
col = "dark green",
na.action = na.pass)   # do not stop if there are missing values in the data
