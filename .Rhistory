getwd()
getwd()
load("TSA_2023_project_data_1.csv")
source("testdf.R")
Data <- read.csv("TSA_2023_project_data_1.csv",header = TRUE, dec = ".")
View(Data)
View(Data)
structure(Data)
summary(Data)
glimpse(Data)
library(tidyverse)
glimpse(Data)
#Notice that the first column is the Date column, which is under "Character" type
#We need to transform it into "Date" type.
Data$x <- as.Date(Data$x, format = "%Y-%m-%d")
Data$X
#Notice that the first column is the Date column, which is under "Character" type
#We need to transform it into "Date" type.
Data$X <- as.Date(Data$X, format = "%Y-%m-%d")
glimpse(Data)
#Checking for missing data
summary(Data)
is.na.data.frame(Data)
structure(Data)
plot(Data$x1)
plot(Data$x1,type="l")
plot(Data$x2, Data$x1,type="l")
plot(Data$x1,type="l")
plot(Data$x2,type="l")
plot(Data$x3,type="l")
plot(Data$x1,type="l")
plot(Data$x2,type="l")
plot(Data$x3,type="l")
plot(Data$x4,type="l")
plot(Data$x5,type="l")
plot(Data$x5,type="l")
plot(Data$x6,type="l")
plot(Data$x4,type="l")
plot(Data$x5,type="l")
plot(Data$x6,type="l")
plot(Data$x7,type="l")
plot(Data$x8,type="l")
plot(Data$x9,type="l")
plot(Data$x10,type="l")
plot(Data$x9,type="l")
plot(Data$x10,type="l")
plot(Data$x9,type="l")
plot(Data$x10,type="l")
plot(Data$x10,type="l")
plot(Data$x9,type="l")
plot(Data$x10,type="l")
plot(Data$x1,type="l")
plot(Data$x2,type="l")
plot(Data$x9,type="l")
plot(Data$x10,type="l")
plot(Data$x10,type="l")
plot(Data$x9,type="l")
plot(Data$x10,type="l")
plot(Data$x8,type="l")
plot(Data$x7,type="l")
plot(Data$x6,type="l")
plot(Data$x5,type="l")
plot(Data$x6,type="l")
plot(Data$x3,type="l")
plot(Data$x4,type="l")
library(xts)
type(Data)
class(Data)
#Create xts objects
Data <- xts(Data[,-1],Data$X)
class(Data)
plot(Data,type="l")
ggplot(Data)
a <- ggplot(Data)
a
display(a)
a <- ggplot(Data, aes(x=Data[,-1],y=Data$X)
a
View(a)
plot(Data,  main = "Line Chart for 10 Time Series",  , type="l")
plot(Data,
main = "Line Chart for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
legend.loc = "topleft",
type="l")
plot(Data,
main = "Line Chart for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
legend.loc = "bottomleft",
type="l")
Data %>%
dygraph() %>%
dyRangeSelector(height = 40)
library(quantmod)
getwd()
Data %>%
dygraph() %>%
dyRangeSelector(height = 40)
library(dygraphs)
Data %>%
dygraph() %>%
dyRangeSelector(height = 40)
plot(Data,
multi.panel = True,
main = "Line Chart for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
legend.loc = "bottomleft",
type="l")
plot(Data,
main = "Line Chart for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
legend.loc = "bottomleft",
multi.panel = True,
type="l")
plot(Data,
main = "Line Chart for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
legend.loc = "bottomleft",
multi.panel = TRUE,
type="l")
plot(Data,
main = "Line Chart for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
legend.loc = "bottomleft",
multi.panel = TRUE,
yaxis.same = FALSE,
type="l")
plot(Data,
main = "Line Chart for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 1,
legend.loc = "bottomleft",
multi.panel = TRUE,
yaxis.same = FALSE,
type="l")
plot(Data,
main = "Line Chart for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
legend.loc = "bottomleft",
multi.panel = TRUE,
yaxis.same = FALSE,
type="l")
plot(Data,
main = "Line Chart for 10 Time Series",
major.ticks = "years",
grid.ticks.on = "years",
legend.loc = "bottomleft",
multi.panel = TRUE,
yaxis.same = FALSE,
type="l")
plot(Data,
main = list("Line Chart for 10 Time Series",
cex = 1.5,
line = 2,
col = "darkblue",
font = 2),
major.ticks = "years",
grid.ticks.on = "years",
legend.loc = "bottomleft",
multi.panel = TRUE,
yaxis.same = FALSE,
type = "l")
library(lmtest)
Data %>% glimpse()
#Time series 1 & 2:
#4. Create first difference
Data$dx1 <- diff.xts(Data$x1)
Data$dx2 <- diff.xts(Data$x2)
testdf(variable = Data$x1)
testdf(variable = Data$x1,
max.augmentations = 3)
testdf(variable = Data$dx1,
max.augmentations = 3)
#Plot both variables on the graph:
plot(Data[, 1:2],
col = c("black", "blue"),
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "Time Series X1 & X2",
legend.loc = "topleft")
#Plot both variables on the graph:
plot(Data[, 1:2],
col = c("black", "blue"),
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "Time Series X1 & X2",
legend.loc = "topright")
#Plot both variables on the graph:
plot(Data[, 1:2],
col = c("red", "blue"),
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "Time Series X1 & X2",
legend.loc = "topright")
#Plot both variables on the graph:
plot(Data[, 1:2],
col = c("red", "blue"),
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 2,
main = "Time Series X1 & X2",
legend.loc = "topright")
testdf(variable = Data$x1,
max.augmentations = 3)
testdf(variable = Data$x1,
max.augmentations = 3)
testdf(variable = Data$dx1,
max.augmentations = 3)
testdf(variable = Data$x2,
max.augmentations = 3)
testdf(variable = Data$dx2,
max.augmentations = 3)
#Time series 1 & 2:
#4. Create first difference
Data$dx1 <- diff.xts(Data$x1)
Data$dx2 <- diff.xts(Data$x2)
testdf(variable = Data$x2,
max.augmentations = 3)
testdf(variable = Data$dx2,
max.augmentations = 3)
plot(Data$x9,type="l")
plot(Data$x10,type="l")
#Time series 1 & 2:
#4. Create first difference
Data$dx9 <- diff.xts(Data$x9)
Data$dx10 <- diff.xts(Data$x10)
testdf(variable = Data$x9,
max.augmentations = 3)
testdf(variable = Data$dx1,
max.augmentations = 3)
testdf(variable = Data$dx9,
max.augmentations = 3)
testdf(variable = Data$x10,
max.augmentations = 3)
testdf(variable = Data$dx10,
max.augmentations = 3)
#Second Method
Data %>%
dygraph() %>%
dyRangeSelector(height = 40)
testdf(variable = Data$x1,
max.augmentations = 3)
testdf(variable = Data$x9,
max.augmentations = 3)
testdf(variable = Data$x2,
max.augmentations = 3)
testdf(variable = Data$x3,
max.augmentations = 3)
testdf(variable = Data$x4,
max.augmentations = 3)
testdf(variable = Data$x5,
max.augmentations = 3)
testdf(variable = Data$x6,
max.augmentations = 3)
testdf(variable = Data$x7,
max.augmentations = 3)
testdf(variable = Data$x8,
max.augmentations = 3)
testdf(variable = Data$x9,
max.augmentations = 3)
testdf(variable = Data$x10,
max.augmentations = 3)
Data$dx1 <- diff.xts(Data$x1)
Data$dx2 <- diff.xts(Data$x1)
Data$dx3 <- diff.xts(Data$x3)
Data$dx4 <- diff.xts(Data$x4)
Data$dx5 <- diff.xts(Data$x5)
Data$dx6 <- diff.xts(Data$x6)
Data$dx7 <- diff.xts(Data$x7)
Data$dx8 <- diff.xts(Data$x8)
Data$dx9 <- diff.xts(Data$x9)
Data$dx10 <- diff.xts(Data$x10)
testdf(variable = Data$dx1,
max.augmentations = 3)
testdf(variable = Data$dx2,
max.augmentations = 3)
testdf(variable = Data$dx3,
max.augmentations = 3)
testdf(variable = Data$dx4,
max.augmentations = 3)
testdf(variable = Data$dx5,
max.augmentations = 3)
testdf(variable = Data$dx6,
max.augmentations = 3)
testdf(variable = Data$dx7,
max.augmentations = 3)
testdf(variable = Data$dx8,
max.augmentations = 3)
testdf(variable = Data$dx9,
max.augmentations = 3)
testdf(variable = Data$dx10,
max.augmentations = 3)
model.coint <- lm(x1 ~ x2, data = Data)
summary(model.coint)
#The model is significantly explained by x2.
#We further  test the stationary of the residuals:
testdf(variable = residuals(model.coint), max.augmentations = 3)
#The model is significantly explained by x2.
#We further  test the stationary of the residuals:
testdf(variable = residuals(model.coint), max.augmentations = 5)
